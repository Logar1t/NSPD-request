"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ NSPD API
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

from nspd_request import NSPD
import time

def demo_basic_functions():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    """
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –û–°–ù–û–í–ù–´–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 60)
    
    api = NSPD()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    zu_number = "77:03:0002007:7190"  # –ó–£
    oks_number = "77:03:0002007:9137"  # –û–ö–°
    
    print(f"\nüìã –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ó–£: {zu_number}")
    print("-" * 40)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º geom_id
    geom_id = api.get_geom_id(zu_number)
    print(f"‚úÖ geom_id: {geom_id}")
    
    # 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞
    obj_type = api.get_object_type(zu_number)
    print(f"‚úÖ –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {obj_type}")
    
    # 3. –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    related = api.get_related(zu_number)
    if related.get("error"):
        print(f"‚ùå –û—à–∏–±–∫–∞: {related['error']}")
    else:
        print(f"‚úÖ –°–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: {len(related['related'])}")
        for i, obj in enumerate(related['related'][:3], 1):
            print(f"   {i}. {obj}")
        if len(related['related']) > 3:
            print(f"   ... –∏ –µ—â–µ {len(related['related']) - 3}")
    
    print(f"\nüìã –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –û–ö–°: {oks_number}")
    print("-" * 40)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º geom_id
    geom_id = api.get_geom_id(oks_number)
    print(f"‚úÖ geom_id: {geom_id}")
    
    # 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞
    obj_type = api.get_object_type(oks_number)
    print(f"‚úÖ –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {obj_type}")
    
    # 3. –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    related = api.get_related(oks_number)
    if related.get("error"):
        print(f"‚ùå –û—à–∏–±–∫–∞: {related['error']}")
    else:
        print(f"‚úÖ –°–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: {len(related['related'])}")
        for i, obj in enumerate(related['related'], 1):
            print(f"   {i}. {obj}")

def demo_get_info_function():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ get_info()
    """
    print(f"\n{'='*60}")
    print("‚ö° –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –§–£–ù–ö–¶–ò–ò get_info()")
    print("=" * 60)
    
    api = NSPD()
    kad_number = "77:03:0002007:7190"
    
    print(f"üìã –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç: {kad_number}")
    print("=" * 60)
    
    # 1. –¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    print("\n1Ô∏è‚É£ –¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print("-" * 40)
    
    data = api.get_info(kad_number)
    if "error" in data:
        print(f"‚ùå –û—à–∏–±–∫–∞: {data['error']}")
    else:
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print(f"   –ö–ª—é—á–∏: {list(data.keys())}")
        print(f"   –ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä: {data.get('kad_number')}")
    
    # 2. –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º geom_id
    print("\n2Ô∏è‚É£ –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º geom_id:")
    print("-" * 40)
    
    data = api.get_info(kad_number, include_geom_id=True)
    if "error" in data:
        print(f"‚ùå –û—à–∏–±–∫–∞: {data['error']}")
    else:
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å geom_id")
        print(f"   –ö–ª—é—á–∏: {list(data.keys())}")
        print(f"   geom_id: {data.get('geom_id')}")
    
    # 3. –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º object_type
    print("\n3Ô∏è‚É£ –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º object_type:")
    print("-" * 40)
    
    data = api.get_info(kad_number, include_object_type=True)
    if "error" in data:
        print(f"‚ùå –û—à–∏–±–∫–∞: {data['error']}")
    else:
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å object_type")
        print(f"   –ö–ª—é—á–∏: {list(data.keys())}")
        print(f"   object_type: {data.get('object_type')}")
    
    # 4. –° –æ–±–æ–∏–º–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    print("\n4Ô∏è‚É£ –° –æ–±–æ–∏–º–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏:")
    print("-" * 40)
    
    data = api.get_info(kad_number, include_geom_id=True, include_object_type=True)
    if "error" in data:
        print(f"‚ùå –û—à–∏–±–∫–∞: {data['error']}")
    else:
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å geom_id –∏ object_type")
        print(f"   –ö–ª—é—á–∏: {list(data.keys())}")
        print(f"   geom_id: {data.get('geom_id')}")
        print(f"   object_type: {data.get('object_type')}")
        print(f"   –ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä: {data.get('kad_number')}")

def demo_comparison():
    """
    –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    """
    print(f"\n{'='*60}")
    print("üìä –°–†–ê–í–ù–ï–ù–ò–ï –°–ü–û–°–û–ë–û–í –ü–û–õ–£–ß–ï–ù–ò–Ø –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    api = NSPD()
    kad_number = "77:03:0002007:7190"
    
    print(f"\nüîç –û–±—ä–µ–∫—Ç: {kad_number}")
    print("-" * 40)
    
    # –°–ø–æ—Å–æ–± 1: –û—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    print("1Ô∏è‚É£ –û—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    
    geom_id = api.get_geom_id(kad_number)
    obj_type = api.get_object_type(kad_number)
    
    print(f"   geom_id: {geom_id}")
    print(f"   object_type: {obj_type}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: 3 (get_data + get_geom_id + get_object_type)")
    
    # –°–ø–æ—Å–æ–± 2: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    print("\n2Ô∏è‚É£ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è get_info():")
    
    data = api.get_info(kad_number, include_geom_id=True, include_object_type=True)
    if "error" not in data:
        print(f"   geom_id: {data.get('geom_id')}")
        print(f"   object_type: {data.get('object_type')}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: 1 (get_info —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏)")
    
    print(f"\nüí° –í—ã–≤–æ–¥: get_info() —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª–µ–π!")

def demo_optimization():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    """
    print(f"\n{'='*60}")
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò")
    print("=" * 60)
    
    api = NSPD()
    kad_number = "77:03:0002007:7190"
    
    print(f"üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç: {kad_number}")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ get_info()
    print("\n‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è get_info():")
    print("-" * 40)
    
    start_time = time.time()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    data = api.get_info(kad_number, include_geom_id=True, include_object_type=True)
    
    end_time = time.time()
    execution_time = end_time - start_time
    
    if "error" in data:
        print(f"‚ùå –û—à–∏–±–∫–∞: {data['error']}")
    else:
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∑–∞ {execution_time:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"   geom_id: {data.get('geom_id')}")
        print(f"   object_type: {data.get('object_type')}")
        print(f"   –ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä: {data.get('kad_number')}")
        print(f"   –ö–ª—é—á–∏ –≤ –æ—Ç–≤–µ—Ç–µ: {list(data.keys())}")

def demo_error_handling():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    """
    print(f"\n{'='*60}")
    print("‚ö†Ô∏è  –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö")
    print("=" * 60)
    
    api = NSPD()
    
    error_cases = [
        "99:99:9999999:9999",  # –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä
        "",                    # –ü—É—Å—Ç–æ–π –Ω–æ–º–µ—Ä
        "77:03:0002007:9999"   # –ù–æ–º–µ—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    ]
    
    for case in error_cases:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: '{case}'")
        
        # –¢–µ—Å—Ç get_geom_id
        geom_id = api.get_geom_id(case)
        if geom_id is None:
            print(f"‚úÖ get_geom_id: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞")
        else:
            print(f"‚ùå get_geom_id: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        
        # –¢–µ—Å—Ç get_object_type
        obj_type = api.get_object_type(case)
        if obj_type is None:
            print(f"‚úÖ get_object_type: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞")
        else:
            print(f"‚ùå get_object_type: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        
        # –¢–µ—Å—Ç get_related
        related = api.get_related(case)
        if related.get("error"):
            print(f"‚úÖ get_related: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞")
        else:
            print(f"‚ùå get_related: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")

def demo_coordinates():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ó–£ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    """
    print(f"\n{'='*60}")
    print("üó∫Ô∏è  –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –ó–£ –ü–û –ö–û–û–†–î–ò–ù–ê–¢–ê–ú")
    print("=" * 60)
    
    api = NSPD()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    test_coordinates = [
        (55.811978, 37.498339, "–ú–æ—Å–∫–≤–∞, –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 77:09:0004001:8")
    ]
    
    for lat, lon, description in test_coordinates:
        print(f"\nüìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat}, {lon}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
        print("-" * 40)
        
        start_time = time.time()
        kad_number = api.get_zu_by_coordinates(lat, lon)
        end_time = time.time()
        
        request_time = end_time - start_time
        
        if kad_number:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ó–£: {kad_number}")
            print(f"   –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞: {request_time:.2f} —Å–µ–∫")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –ó–£
            print(f"   üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
            obj_type = api.get_object_type(kad_number)
            if obj_type:
                print(f"      –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {obj_type}")
            
            geom_id = api.get_geom_id(kad_number)
            if geom_id:
                print(f"      geom_id: {geom_id}")
        else:
            print(f"‚ùå –ó–£ –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ {request_time:.2f} —Å–µ–∫")
            print(f"   –í–æ–∑–º–æ–∂–Ω–æ, –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ –Ω–µ—Ç –ó–£ –∏–ª–∏ –Ω—É–∂–µ–Ω –±–æ–ª—å—à–∏–π bbox_size")

def demo_performance():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    """
    print(f"\n{'='*60}")
    print("‚ö° –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò")
    print("=" * 60)
    
    api = NSPD()
    
    test_numbers = [
        "77:03:0002007:7190",
        "77:03:0002007:9137"
    ]
    
    total_time = 0
    successful_requests = 0
    
    for kad_number in test_numbers:
        print(f"\n‚è±Ô∏è  –¢–µ—Å—Ç–∏—Ä—É–µ–º: {kad_number}")
        
        start_time = time.time()
        result = api.get_related(kad_number)
        end_time = time.time()
        
        request_time = end_time - start_time
        total_time += request_time
        
        if not result.get("error"):
            successful_requests += 1
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞ {request_time:.2f} —Å–µ–∫")
            print(f"   –ù–∞–π–¥–µ–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: {len(result['related'])}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞ {request_time:.2f} —Å–µ–∫: {result['error']}")
    
    print(f"\nüìä –ò–¢–û–ì–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:")
    print(f"   –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {successful_requests}/{len(test_numbers)}")
    print(f"   –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time:.2f} —Å–µ–∫")
    print(f"   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—Ä–æ—Å: {total_time/len(test_numbers):.2f} —Å–µ–∫")

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    """
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ë–ò–ë–õ–ò–û–¢–ï–ö–ò NSPD API")
    print("=" * 60)
    print("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –ù–°–ü–î")
    print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏")
    print("=" * 60)
    
    try:
        demo_basic_functions()
        demo_get_info_function()
        demo_comparison()
        demo_optimization()
        demo_error_handling()
        demo_coordinates()
        demo_performance()
        
        print(f"\n{'='*60}")
        print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
        print("=" * 60)
        print("üìö –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–∏—Ç–∞–π—Ç–µ README.md")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
